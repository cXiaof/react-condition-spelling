{"version":3,"file":"main.6c0a58d3add5cde6fc6c.bundle.js","sources":["webpack:///./stories/utils.mockData.js"],"sourcesContent":["export const fields = [\n    { dataType: 'varchar', fieldName: 'name', name: 'Name' },\n    { dataType: 'char', fieldName: 'qr_code', name: 'QR Code' },\n    { dataType: 'decimal', fieldName: 'height', name: 'Height' },\n    { dataType: 'varchar', fieldName: 'from', name: 'Come From' },\n    { dataType: 'int', fieldName: 'status', name: 'Status' }\n]\n\nexport const config = {\n    text: {\n        dataTypes: ['varchar', 'char', 'text', 'blob'],\n        symbols: {\n            equal: { symbol: '=' },\n            like: {\n                symbol: 'LIKE',\n                preprocess: (value) => `%${value}%`\n            },\n            'is null': { symbol: 'IS NULL', noNeedValue: true }\n        }\n    },\n    number: {\n        dataTypes: ['int', 'float', 'double', 'decimal'],\n        symbols: { '=': { symbol: '=' }, '≠': { symbol: '<>' } }\n    }\n}\n\nexport const configChZn = {\n    doors: { 且: 'AND', 或: 'OR' },\n    text: {\n        dataTypes: ['varchar', 'char', 'text', 'blob'],\n        symbols: {\n            等于: { symbol: '=' },\n            不等于: { symbol: '<>' },\n            包含: {\n                symbol: 'LIKE',\n                preprocess: (value) => `%${value}%`\n            },\n            开始于: {\n                symbol: 'LIKE',\n                preprocess: (value) => `${value}%`\n            },\n            结束于: {\n                symbol: 'LIKE',\n                preprocess: (value) => `%${value}`\n            },\n            为null: { symbol: 'IS NULL', noNeedValue: true },\n            不为null: { symbol: 'IS NOT NULL', noNeedValue: true }\n        }\n    },\n    number: {\n        dataTypes: ['int', 'float', 'double', 'decimal'],\n        symbols: {\n            等于: { symbol: '=' },\n            不等于: { symbol: '<>' },\n            小于: { symbol: '<' },\n            小于等于: { symbol: '<=' },\n            大于: { symbol: '>' },\n            大于等于: { symbol: '>=' }\n        }\n    }\n}\n\nexport const onChange = ({ condition, spelling, inputs }) =>\n    console.log(condition, spelling, inputs)\n"],"mappings":"AAAA","sourceRoot":""}